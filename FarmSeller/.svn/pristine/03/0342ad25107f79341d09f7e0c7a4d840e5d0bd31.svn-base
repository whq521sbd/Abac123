package com.aotuo.vegetable.main.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.aotuo.vegetable.R;
import com.aotuo.vegetable.act.LocalBuyActivity;
import com.aotuo.vegetable.act.LocalSellActivity;
import com.aotuo.vegetable.act.NolocalActivity;
import com.aotuo.vegetable.adapter.GuidePagerAdapter;
import com.aotuo.vegetable.base.BaseFragment;
import com.aotuo.vegetable.util.CommonTools;

import java.util.ArrayList;
import java.util.List;


public class MainPageFragment extends BaseFragment implements OnClickListener {
    public static final int TO_MAIN_PAGE = 23;
    private TextView local, nonlocal;
    private LayoutInflater inflater;
    private LinearLayout onlySell;
    private ViewGroup container;
    private Bundle savedInstanceState;
    private View view;
    private ViewPager vp_AdMainviewpager;
    private List<View> adlist;

    /*
    * 广告轮播
    * */

    private final int AUTO_MSG = 1;
    private final int HANDLE_MSG = AUTO_MSG + 1;
    private static final int PHOTO_CHANGE_TIME = 5000;//定时变量
    private int index = 0;

    public int indexadd(int i) {//递归方法，循环播放
        if (index == 2) {
            index = 0;
            return index;
        } else {

            index++;
        }
        return index;
    }

    private Handler mHandler = new Handler() {

        public void handleMessage(Message msg) {
            switch (msg.what) {
                case AUTO_MSG:

                    vp_AdMainviewpager.setCurrentItem(indexadd(0));//收到消息后设置当前要显示的图片


                    mHandler.sendEmptyMessageDelayed(AUTO_MSG, PHOTO_CHANGE_TIME);
                    break;
                case HANDLE_MSG:
                    mHandler.sendEmptyMessageDelayed(AUTO_MSG, PHOTO_CHANGE_TIME);
                    break;
                default:
                    break;
            }
        }

        ;
    };

    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        this.inflater = inflater;
        this.container = container;
        this.savedInstanceState = savedInstanceState;
        if (view == null) {
            view = inflater.inflate(R.layout.fragment_main_page, null);
            initUI(view);
        }

        ViewGroup parent = (ViewGroup) view.getParent();
            if (parent != null) {
            parent.removeView(view);
        }

       /*
       * 广告数据源
       * */
        adlist = new ArrayList<View>();
        LayoutInflater layoutInflater  =  getActivity().getLayoutInflater();
        adlist.add(layoutInflater.inflate(R.layout.ad1,null));
        adlist.add(layoutInflater.inflate(R.layout.ad2,null));
        adlist.add(layoutInflater.inflate(R.layout.ad3,null));
        GuidePagerAdapter adapter =  new GuidePagerAdapter((ArrayList<View>) adlist);
        vp_AdMainviewpager.setAdapter(adapter);
        return view;
    }

    private void initUI(View view) {
        local = (TextView) view.findViewById(R.id.local);
        nonlocal = (TextView) view.findViewById(R.id.nonlocal);
        local.setOnClickListener(this);
        nonlocal.setOnClickListener(this);
        vp_AdMainviewpager = (ViewPager) view.findViewById(R.id.vp_AdMainviewpager);
        mHandler.sendEmptyMessageDelayed(AUTO_MSG, PHOTO_CHANGE_TIME);
        if(CommonTools.isSell(getActivity())){
            nonlocal.setText("跨场交易");
        } else {
            nonlocal.setText("离场交易");
        }
    }


    @Override
    public void onResume() {
        super.onResume();

    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.local:{
                if(CommonTools.isSell(getActivity())){
                    Intent intent = new Intent(getActivity(), LocalSellActivity.class);
                    startActivityForResult(intent, TO_MAIN_PAGE);
                } else {
                    Intent intent = new Intent(getActivity(), LocalBuyActivity.class);
                    startActivityForResult(intent, TO_MAIN_PAGE);
                }
            }
            break;
            case R.id.nonlocal:{
                Intent intent = new Intent(getActivity(), NolocalActivity.class);
                startActivityForResult(intent, TO_MAIN_PAGE);
            }
            break;
        }
    }


    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

    }

    @Override
    public void handleCallBack(Message msg) {

    }
}
