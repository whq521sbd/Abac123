package com.aotuo.vegetable.main.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.InputType;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.aotuo.vegetable.R;
import com.aotuo.vegetable.act.MainActivity;
import com.aotuo.vegetable.act.PayInfoActivity;
import com.aotuo.vegetable.adapter.CarAdapter;
import com.aotuo.vegetable.base.BaseFragment;
import com.aotuo.vegetable.dialog.EditDialog;
import com.aotuo.vegetable.entity.TransData;
import com.aotuo.vegetable.entity.TransEntity;
import com.aotuo.vegetable.util.CommonTools;
import com.aotuo.vegetable.util.MyToast;
import com.aotuo.vegetable.util.StringUtils;
import com.aotuo.vegetable.view.XListView;
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;


public class CarFragment extends BaseFragment implements View.OnClickListener, XListView.IXListViewListener {

    private LayoutInflater inflater;
    private LinearLayout onlySell;
    private ViewGroup container;
    private Bundle savedInstanceState;
    private View view;
    private View titleGap;
    private XListView car_listview;
    private CheckBox checkall;
    private TextView tv_pay, tv_fullrate;
    private CarAdapter carAdapter;
    private EditDialog editDialog;
    private List<TransEntity> list = new ArrayList<TransEntity>();
    private int curPage = 0;
    private int totalPage = 1;
    private String payNum;

    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        this.inflater = inflater;
        this.container = container;
        this.savedInstanceState = savedInstanceState;
        if (view == null) {
            view = inflater.inflate(R.layout.car_fragment, null);
        }

        ViewGroup parent = (ViewGroup) view.getParent();
        if (parent != null) {
            parent.removeView(view);
        }
        tv_fullrate = (TextView) view.findViewById(R.id.tv_fullrate);

//        “全选”复选框，监听
        checkall = (CheckBox) view.findViewById(R.id.checkall);
        checkall.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (list.size() <= 0) {
                    return;
                }
                for (TransEntity te : list) {
                    if (((CheckBox) v).isChecked())
                        te.setSelect(true);
                    else
                        te.setSelect(false);
                }
                sHandler.sendEmptyMessage(20);
            }
        });

        //结算
        tv_pay = (TextView) view.findViewById(R.id.tv_pay);
        tv_pay.setOnClickListener(this);


//      1.初始化 listview
        car_listview = (XListView) view.findViewById(R.id.car_listview);
        car_listview.setPullRefreshEnable(true);
        car_listview.setPullLoadEnable(true);
        car_listview.setXListViewListener(this);

//        3.适配器装载数据源
        carAdapter = new CarAdapter(getActivity(), list, sHandler);
//        4.listview加载适配器
        car_listview.setAdapter(carAdapter);

        editDialog = new EditDialog(getActivity(), R.style.MyDialogStyle,
                "请输入交易密码", InputType.TYPE_TEXT_VARIATION_PASSWORD,
                new EditDialog.DialogListener() {
                    @Override
                    public void onclick(View view) {
                        switch (view.getId()) {
                            case R.id.cannel: {
                                editDialog.dismiss();
                            }
                            break;
                            case R.id.ok: {
                                String pwd = editDialog.returnString();
                                if (StringUtils.isEmpty(pwd) || pwd.length() < 3) {
                                    MyToast.showToast(getActivity(), "请输入正确交易密码！", 2);
                                } else {
                                    toPay(pwd);
                                }
                                editDialog.dismiss();
                            }
                            break;
                        }
                    }
                });

        return view;
    }

    @Override
    public void onStart() {
        super.onStart();
        curPage = 0;
        getData(curPage + 1);
    }

    private String getNum() {
        StringBuilder str = new StringBuilder();
        for (TransEntity te : list) {
            if (te.isSelect()) {
                if (str.length() > 0)
                    str.append(",");
                str.append(te.getNum());
            }
        }
        return str.toString();
    }

    private void updateTotal() {
        double total = 0;
        int count = 0;
        for (TransEntity te : list) {
            if (te.isSelect() && !StringUtils.isEmpty(te.getSum())) {
                double t = 0;
                try {
                    t = Double.parseDouble(te.getSum());
                } catch (NumberFormatException e) {
                    e.printStackTrace();
                }
                total += t;
                count++;
            }
        }
        if (count == list.size())
            checkall.setChecked(true);
        else
            checkall.setChecked(false);
        tv_fullrate.setText(String.format("%.2f", total));
    }

    private void getData(int curPage) {
        //参数：Token,curPage
        HashMap<String, Object> param = new HashMap<String, Object>();
        param.put("Token", CommonTools.getToken(getActivity()));
        param.put("curPage", curPage);
        MainActivity.postRequest(1, sHandler, "/GoodsA/CartList", param);
    }

    private void toPay(String pwd) {
        //参数：Token,TransTempNum(***,***,****),BuyerDevice,TransPwd
        payNum = getNum();
        if (StringUtils.isEmpty(payNum)) {
            MyToast.showToast(getActivity(), "请选择订单！", 3);
            return;
        }

        HashMap<String, Object> param = new HashMap<String, Object>();
        param.put("Token", CommonTools.getToken(getActivity()));
        param.put("TransTempNum", payNum);
        param.put("BuyerDevice", CommonTools.getDeviceInfo(getActivity()));
        param.put("TransPwd", CommonTools.md5(pwd));
        MainActivity.postRequest(3, sHandler, "/GoodsA/CartPay", param);
    }

    private Handler sHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            if (msg.what == 1) { //获得列表
                car_listview.stopLoadMore();
                car_listview.stopRefresh();
                if (msg.arg1 > 0) {
                    TransData td = null;
                    try {
                        td = new Gson().fromJson(msg.obj.toString(), TransData.class);
                    } catch (JsonSyntaxException e) {
                        e.printStackTrace();
                    }
                    if (td != null) {
                        curPage = td.getCurPage();
                        totalPage = td.getPageSize();
                        if (curPage == 1) {
                            list.clear();
                        }
                        if (td.getTrans() != null && td.getTrans().size() > 0)
                            list.addAll(td.getTrans());
                    } else {
                        if (curPage == 0) {
                            list.clear();
                        }
                    }
                } else {
                    if (curPage == 0) {
                        list.clear();
                    }
                }
                carAdapter.notifyDataSetChanged();
            } else if (msg.what == 2) {// 删除
                if (msg.arg1 > 0) {
                    curPage = 0;
                    getData(curPage + 1);
                    MyToast.showToast(getActivity(), "删除成功！", 3);
                } else {
                    MyToast.showToast(getActivity(), msg.obj.toString(), 3);
                }
            } else if (msg.what == 3) {// 提交
                if (msg.arg1 > 0) {
                    MyToast.showToast(getActivity(), "交易成功！", 3);
                    Intent intent = new Intent(getActivity(), PayInfoActivity.class);
                    ArrayList<String> ls = new ArrayList<String>();
                    String[] sarr = payNum.split(",");
                    for(String s : sarr)
                        ls.add(s);
                    intent.putStringArrayListExtra("num", ls);
                    startActivity(intent);
                } else {
                    MyToast.showToast(getActivity(), msg.obj.toString(), 3);
                }
            } else if (msg.what == 20) {
                updateTotal();
                carAdapter.notifyDataSetChanged();
            } else if (msg.what == 30) { // update
                updateTotal();
            }
        }
    };

    @Override
    public void handleCallBack(Message msg) {
    }


    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.tv_pay:
//                if (CommonTools.getCheckTPWD(getActivity())) {
//                    StaticDialog sd = new StaticDialog();
//                    sd.init_dialog(editDialog);
//                    editDialog.clearEdit();
//                } else {
//                    toPay("");
//                }
                payNum = "201610101105102982P0,20161010133810233R0R,2016101109221166104F";
                Intent intent = new Intent(getActivity(), PayInfoActivity.class);
                ArrayList<String> ls = new ArrayList<String>();
                String[] sarr = payNum.split(",");
                for(String s : sarr)
                    ls.add(s);
                intent.putStringArrayListExtra("num", ls);
                startActivity(intent);
                break;
            default:
                break;

        }
    }

    @Override
    public void onRefresh() {
        curPage = 0;
        getData(curPage + 1);
    }

    @Override
    public void onLoadMore() {
        if (curPage < totalPage) {
            getData(curPage + 1);
        } else {
            car_listview.stopLoadMore();
            car_listview.stopRefresh();
        }
    }
}
